#!/usr/bin/env direnv
#
# https://github.com/emetriq/taxigirl
# https://github.com/zimbatm/direnv

set -e

###
### ANSIBLE
###

### configuration file to use (json or yaml)
# export ANSIBLE_EXTRA_VARS="@./config/test.yml"
# export ANSIBLE_EXTRA_VARS="@./config/chef_example.yml"
export ANSIBLE_EXTRA_VARS="@/Users/tom/Sync/prjcts/xpl/kitchen/cookbooks/xpl_graphite_ng/taxigirl/graphite3_in.yml"

### additional options to pass to ansible-playbook
# export ANSIBLE_RAW_ARGUMENTS="['--check', '--diff']"

### inventory of hosts
export ANSIBLE_INVENTORY_PATH="./inventory/vagrant.py"

### playbook to run
# export ANSIBLE_PLAYBOOK="./playbooks/main.yml"

### noise level
export ANSIBLE_VERBOSE="vvv"

### optional, limit list of hosts to one
### (the provisioners sets this automatically)
# export ANSIBLE_LIMIT="localhost"

### useful for development. bit noisy on production
export ANSIBLE_DISPLAY_ARGS_TO_STDOUT="1"

### tags to exclude from run (speeds up lots but misses updates)
# export ANSIBLE_SKIP_TAGS="apt_upgrade,gem_update"

### tags to use exclusively during the run
# export ANSIBLE_TAGS="deploy"

### ansible run analysis
### https://ara.readthedocs.io/en/latest/configuration.html#ara-database
# export ARA_DATABASE="mysql+pymysql://ara:password@localhost/ara"
# export ARA_DATABASE="sqlite:///~/.ara/ansible.sqlite" # default

###
### VAGRANT
###

### dont phone home to hashicorp
export VAGRANT_CHECKPOINT_DISABLE="1"

# TODO: comments
# export VAGRANT_PERSISTENT_STORAGE_DISKDEVICE="/dev/sdb"
# export VAGRANT_PERSISTENT_STORAGE_ENABLED="false"
# export VAGRANT_VIRTUALBOX_GUI="1"
# export VAGRANT_VM_BOX="geerlingguy/ubuntu1604"
# export VAGRANT_VM_HOSTNAME="vagrant.taxigirl"

### debugging
# export VAGRANT_LOG="info"
# export VAGRANT_NO_PLUGINS="1"
# export VAGRANT_NO_TRIGGERS="1"

###
### AWS / BOTO
###

### usually this profile is defined in '/etc/.aws/credentials'
# export AWS_PROFILE="production"
export AWS_PROFILE="default"

###
### AUTOBITCH
### https://github.com/gretel/autobitch
###

### use autobitch if available
if test -f "$(brew --prefix autobitch)/share/autobitch.sh"; then
    use_auto "$1" # include script
    use_auto_ruby "$1" # enable autobitching for ruby
    use_auto_python "$1" # enable autobitching for python
fi

### add executables to PATH
# what gets installed
test -d 'bin' && PATH_add 'bin'
# what belongs to the repository
test -d 'sbin' && PATH_add 'sbin'
