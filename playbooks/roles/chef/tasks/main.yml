# -   name: Assert on 'chdir'
#     assert:
#         that: (chdir is defined and chdir is not none and chdir | trim != '')
#     tags:
#     - chef
#     - chef_assert_dest
-   name: Assert on 'chef.tmp_dir'
    assert:
        that: (chef.tmp_dir is defined and chef.tmp_dir is not none and chef.tmp_dir | trim != '')
    tags:
    - chef
    - chef_assert_tmp_dir
-   name: Create directories for temporary data
    file:
        path: "{{ chef_tmpdir }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: root
        mode: 0775
    with_items:
    - "{{ chef.tmp_dir }}"
    - "{{ chef.file_cache_path }}"
    loop_control:
        loop_var: chef_tmpdir
    become: yes
    tags:
    - chef
    - chef_dir
-   name: Create configuration directory
    file:
        path: "{{ chef.config_dir }}"
        state: directory
        owner: root
        group: root
        mode: 0755
    become: yes
    tags:
    - chef
    - chef_dir_config
-   name: Fetch installation script for Chef
    get_url:
        url: https://www.opscode.com/chef/install.sh
        dest: "{{ chef.tmp_dir }}/install.sh"
    register: chef_fetch
    tags:
    - chef
    - chef_fetch
-   name: Install Chef
    command: /usr/bin/env bash "{{ chef.tmp_dir }}/install.sh" -d "{{ chef.tmp_dir }}"
    register: chef_install
    become: yes
    changed_when: chef_install.stdout.find('Selecting previously unselected package chef') != -1
    # when: hostvars[inventory_hostname]['installed'] is undefined
    tags:
    - chef
    - chef_install
# -   name: Factize installation
#     set_fact:
#         chef:
#             installed: yes
#     when: chef_install|success
#     tags:
#     - chef
#     - chef_install
#     - chef_install_fact
-   name: Create configuration file for chef-client (zero)
    template:
        src: ../templates/client.rb.j2
        dest: "{{ chef.config_dir|default('/etc/chef') }}/client.rb"
        mode: 0644
    become: yes
    tags:
    - chef
    - chef_zero_config
    - chef_zero
-   name: Create configuration file for chef-solo
    template:
        src: ../templates/solo.rb.j2
        dest: "{{ chef.config_dir|default('/etc/chef') }}/solo.rb"
        mode: 0644
    become: yes
    tags:
    - chef
    - chef_solo_config
    - chef_solo
-   name: Create node configuration
    copy:
        content: "{{ chef.attributes|default('{}') }}"
        dest: "{{ chef.config_dir|default('/etc/chef') }}/node.json"
        mode: 0644
    when: (chef.attributes is defined)
    become: yes
    tags:
    - chef
    - chef_zero_config
    - chef_zero
# -   name: Adjust permissions
#     file:
#         path: "{{ base_dir }}"
#         recurse: yes
#         owner: "{{ ansible_user }}"
#         mode: 0775
#         state: directory
#     become: yes
#     tags:
#     - chef
#     - chef_permissions
-   name: Gather version of Chef
    command: chef-client -v
    register: chef_version
    when: chef_install|changed
    tags:
    - chef
    - chef_version
# -   name: Factize version of Chef
#     set_fact:
#         chef:
#             version: chef_version.stdout
#     when: chef_version|changed
#     tags:
#     - chef
#     - chef_version
#     - chef_version_fact
-   name: Add Chef to PATH
    lineinfile: >
        dest=/etc/environment
        state=present
        backrefs=yes
        regexp='PATH=(["]*)((?!.*?{{ chef.base_dir }}/bin).*?)(["]*)$'
        line="PATH=\1{{ chef.base_dir }}/bin:\2\3"
    become: yes
    tags:
    - chef
    - chef_path
-   name: Include Runner
    include: chef_run.yml
    tags:
    - chef
    - chef_run
    - chef_solo
    - chef_zero
