-   name: Assert on 'git.dest'
    assert:
        that: (git.dest is defined and git.dest is not none and git.dest | trim != '')
    tags:
    - git
    - git_assert_dest
-   name: Assert on 'git.repo'
    assert:
        that: (git.repo is defined and git.repo is not none and git.repo | trim != '')
    tags:
    - git
    - git_assert_repo
-   name: 'Debug: git'
    debug: var=git verbosity=3
    tags:
    - debug
    - git
    - git_debug
-   name: Install Git
    package:
        name: git
    become: yes
    tags:
    - git
    - git_install
-   name: Create .ssh directory
    file:
        path: ~/.ssh
        owner: "{{ ansible_user }}"
        mode: 0700
        state: directory
    tags:
    - git
    - git_ssh_dir
-   name: Touch known_hosts
    file:
        path: ~/.ssh/known_hosts
        owner: "{{ ansible_user }}"
        mode: 0600
        state: touch
    tags:
    - git
    - git_known_hosts
-   name: Scan for key of Git server
    command: ssh-keyscan -H -t dsa {{ git.server }} >> ~/.ssh/known_hosts
    no_log: yes
    when: (git.server is defined and git.server is not none and git.server | trim != '')
    tags:
    - git
    - git_ssh_keyscan
-   name: Clone project from Git
    git:
        accept_hostkey: "{{ git.accept_hostkey|default(omit) }}"
        depth: "{{ git.depth|default(omit) }}"
        dest: "{{ git.dest }}"
        force: "{{ git.force|default('yes') }}"
        recursive: "{{ git.recursive|default('yes') }}"
        repo: "{{ git.repo }}"
        update: "{{ git.recursive|default('yes') }}"
        version: "{{ git.version|default(omit) }}"
    register: git_clone
    become: yes
    tags:
    - git
    - git_clone
